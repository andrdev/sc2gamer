buildscript {
    repositories {
        mavenCentral()
//required to get the plugin working again with gradle:0.11+ and AS0.6.0
//maven { url 'https://github.com/rockerhieu/mvn-repo/raw/master/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
//classpath 'org.robolectric.gradle:gradle-android-test-plugin:0.10.+'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.11.+'
//required to get the plugin working again on AS 0.6.0
//classpath 'org.robolectric.gradle:gradle-android-test-plugin:0.10.1-SNAPSHOT'
    }
}
allprojects {
    repositories {
        mavenCentral()
    }
}
apply plugin: 'com.android.application'
apply plugin: 'robolectric'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            runProguard false
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }
        release {
            runProguard false
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }
    }
    sourceSets {
        androidTest.setRoot('src/test')
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    productFlavors {
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    compile('com.actionbarsherlock:actionbarsherlock:4.4.0@aar') {
        exclude module: 'support-v4'
    }
    compile('com.octo.android.robospice:robospice:1.4.13') {
        exclude module: 'support-v4'
    }
    compile 'com.android.support:support-v4:20.+'
    compile 'org.jsoup:jsoup:1.6.1'
//for more information on the Butterknife injection framework
//visit https://github.com/JakeWharton/butterknife
    compile 'com.jakewharton:butterknife:5.1.0'
// for more information on the Crouton framework,
// visit https://github.com/keyboardsurfer/Crouton
//a fix for: Module version de.keyboardsurfer.android.widget:crouton:1.8.4 depends on libraries but is not a library itself
    compile('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
// ================== TESTING LIBRARIES ======================
    androidTestCompile 'junit:junit:4.10'
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'support-v4'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
    androidTestCompile 'com.squareup:fest-android:1.0.+'
    androidTestCompile 'org.bouncycastle:bcprov-jdk15on:1.50'
    androidTestCompile 'com.jakewharton:butterknife:5.1.0'
}

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'
    //exclude '**/espresso/**/*.class'
    // configure max heap size of the test JVM
    maxHeapSize = "2048m"
}
apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.1.201405082137"
}
def coverageSourceDirs = [
        '../app/src/main/java'
]
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebug.exec')
    reports {
        xml.enabled = true
        html.enabled = true
    }
}



